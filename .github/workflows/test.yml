name: Tests

on:
    push:
        branches: [ main, prototype, ci-test ]
    pull_request:
        branches: [ main, prototype ]

jobs:
    Test-Linux:
        runs-on: ubuntu-latest
        timeout-minutes: 90

        strategy:
            fail-fast: false
            matrix:
                name: [
                    "USD-22.05-py37",
                    # "USD-22.05-py27",
                ]

                include:
                  -   name: "USD-22.05-py37"
                      usd-tag: "v22.05"
                      python: "3.7"
                #   -   name: "USD-22.05-py27"
                #       usd-tag: "v22.05"
                #       python: "2.7"

        steps:
            -   name: Set up Python ${{ matrix.python }}
                uses: actions/setup-python@v2
                with:
                    python-version: ${{ matrix.python }}
            -   uses: actions/checkout@v3
            -   name: Install Conan
                run: |
                    pip install conan numpy
                    conan profile new default --detect
                    conan profile update settings.compiler.libcxx=libstdc++11 default
                    conan profile show default
            -   name: Install Boost + TBB
                run: |
                    mkdir -p build && cd build
                    conan install boost/1.70.0@ \
                        --options=boost:shared=True \
                        --options=boost:without_python=False \
                        --generator=cmake_find_package \
                        --build=missing
                    conan install tbb/2020.3@ \
                        --generator=cmake_find_package \
                        --build=missing
            -   name: Install USD
                run: |
                    mkdir -p build/USD && cd build/USD
                    git clone https://github.com/PixarAnimationStudios/USD.git \
                        --depth 1 --branch ${{ matrix.usd-tag }} .
                    PY_EXE=$(python -c "import sys; print(sys.executable)")
                    PY_LIBDIR=$(python -c "import sysconfig as sc; \
                        print(sc.get_config_var(\"LIBDIR\"))")
                    PY_LIBNAME=$(python -c "import sysconfig as sc; \
                        print(sc.get_config_var(\"LDLIBRARY\"))")
                    PY_INCLUDE=$(python -c "import sysconfig as sc; \
                        print(sc.get_config_var(\"INCLUDEPY\"))")
                    cmake \
                        -DCMAKE_MODULE_PATH:FILEPATH="$(pwd)/.." \
                        -DPXR_BUILD_IMAGING=False \
                        -DPYTHON_EXECUTABLE="${PY_EXE}" \
                        -DPYTHON_INCLUDE_DIR="${PY_INCLUDE}" \
                        -DPXR_BUILD_DOCUMENTATION=False \
                        -DPXR_BUILD_TESTS=False \
                        -DPXR_BUILD_EXAMPLES=False \
                        -DPXR_BUILD_TUTORIALS=False \
                        -DPXR_BUILD_USD_TOOLS=False \
                        -DPXR_ENABLE_HDF5_SUPPORT=False \
                        -DPXR_ENABLE_PTEX_SUPPORT=False \
                        -DCMAKE_INSTALL_PREFIX=/usr \
                        .
                    cmake --build . --target install -- -j 24
            -   name: Build
                run: |
                    cd build
                    cmake \
                        -DCMAKE_MODULE_PATH:FILEPATH="$(pwd)" \
                        -DPython_FIND_STRATEGY=LOCATION \
                        ..
                    make
            -   name: Run tests
                run: |
                    cd build
                    CTEST_OUTPUT_ON_FAILURE=1 make test
